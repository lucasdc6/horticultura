{"version":3,"sources":["components/ResidualLimitFormComponent.jsx","helpers/httpStatus.js","components/ResourceAlerts.jsx","containers/ListContainer.jsx","App.js","index.js"],"names":["box","top","left","transform","width","height","xs","md","position","bgcolor","padding","ResidualLimitFormComponent","forwardRef","ref","closeModal","activeIngredientList","activeIngredientsLoading","aptitudeList","aptitudesLoading","cropList","cropsLoading","residualLimitPost","residualLimitGet","useState","activeIngredient","setActiveIngredient","aptitude","setAptitude","crop","setCrop","residual","setResidual","harvest","setHarvest","handleAdd","useCallback","params","event","residualLimit","active_ingredient","Box","sx","Stack","direction","justifyContent","alignItems","spacing","Autocomplete","id","options","getOptionLabel","option","name","onChange","e","value","loading","isOptionEqualToValue","renderInput","TextField","label","variant","paddingTop","lg","type","inputProps","min","target","endadornment","InputAdornment","FormControlLabel","control","Checkbox","checked","Button","disabled","onClick","httpStatusToMessage","status","msg","ResourceAlerts","residualLimitList","error","Alert","style","marginTop","marginBottom","severity","AlertTitle","response","mapRows","elem","ListContainer","open","setOpen","selected","setSelected","fetchOptions","data","cachePolicy","useFetch","residualLimitError","residualLimitResponse","post","residualLimitPut","put","residualLimitDelete","del","residualLimitListError","residualLimitListResponse","residualLimitLoading","activeIngredientError","activeIngredientResponse","aptitudeError","aptitudeResponse","cropError","cropResponse","columns","field","headerName","hide","sortable","disableExport","flex","editable","valueOptions","ok","map","handleEdit","find","getValue","residualLimitBody","row","Container","maxWidth","Modal","onClose","components","Toolbar","color","startIcon","length","forEach","rows","checkboxSelection","editMode","onRowEditStop","onSelectionModelChange","sortModel","sort","localeText","esES","MuiDataGrid","defaultProps","theme","createTheme","App","ThemeProvider","url","process","flexGrow","AppBar","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4277038e.chunk.js","sourcesContent":["import React, { useState, forwardRef, useCallback } from 'react';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  InputAdornment,\n  TextField,\n  Stack,\n} from '@mui/material';\n\nconst box = {\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '70%',\n  height: {\n    xs: '65%',\n    md: '30%',\n  },\n  position: 'absolute',\n  bgcolor: '#FFF',\n  padding: '2em',\n};\n\n\nexport const ResidualLimitFormComponent = forwardRef(({\n  closeModal,\n  activeIngredientList,\n  activeIngredientsLoading,\n  aptitudeList,\n  aptitudesLoading,\n  cropList,\n  cropsLoading,\n  residualLimitPost,\n  residualLimitGet,\n}, ref) => {\n  // State\n  const [ activeIngredient, setActiveIngredient ] = useState(null);\n  const [ aptitude, setAptitude ] = useState(null);\n  const [ crop, setCrop ] = useState(null);\n  const [ residual, setResidual ] = useState(0);\n  const [ harvest, setHarvest ] = useState(false);\n\n  // Callbacks\n  const onActiveIngredientChange = (e, value) => {\n    setActiveIngredient(value ? value.id : null);\n  };\n  const onAptitudeChange = (e, value) => {\n    setAptitude(value ? value.id : null);\n  };\n  const onCropChange = (e, value) => {\n    setCrop(value ? value.id : null);\n  };\n  const onResidualChange = (e, value) => {\n    setResidual(e.target.value);\n  };\n  const onHarvestChange = (e, value) => {\n    setHarvest(value);\n  };\n\n  const handleAdd = useCallback((params, event) => {\n    let residualLimit = {\n      active_ingredient: `${activeIngredient}`,\n      aptitude: `${aptitude}`,\n      crop: `${crop}`,\n      residual: `${residual}`,\n      harvest: `${harvest}`,\n    };\n    residualLimitPost(residualLimit)\n    closeModal();\n  }, [residualLimitPost, activeIngredient, aptitude, crop, residual, harvest, closeModal]);\n\n  return (\n    <Box\n      sx={box}\n      ref={ref}\n    >\n      <h2>Agregar</h2>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={{ xs: 1, md: 2 }}\n      >\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"activeIngredient\"\n          options={activeIngredientList}\n          getOptionLabel={(option) => option.name}\n          onChange={onActiveIngredientChange}\n          loading={activeIngredientsLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Ingrediente activo\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"aptitudes\"\n          options={aptitudeList}\n          getOptionLabel={(option) => option.name}\n          onChange={onAptitudeChange}\n          loading={aptitudesLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Aptitud\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"crops\"\n          options={cropList}\n          getOptionLabel={(option) => option.name}\n          onChange={onCropChange}\n          loading={cropsLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Cultivos\" variant=\"outlined\" />}\n        />\n      </Stack>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"left\"\n        alignItems=\"center\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n      <TextField\n        sx={{\n          width: {\n            xs: \"100%\",\n            md: \"32%\",\n            lg: \"32.5%\",\n          }\n        }}\n        id=\"residual\"\n        label=\"Residuos\"\n        type=\"number\"\n        inputProps={{ min: 0 }}\n        onChange={onResidualChange}\n        endadornment={<InputAdornment position=\"end\">g</InputAdornment>}\n      />\n        <FormControlLabel control={\n          <Checkbox checked={harvest} onChange={onHarvestChange} />\n        } label=\"Post Cosecha\" />\n      </Stack>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          disabled={!(activeIngredient && aptitude && crop && residual)}\n          onClick={handleAdd}\n        >Guardar</Button>\n      </Stack>\n    </Box>\n  );\n});\n\nexport default ResidualLimitFormComponent;\n","const httpStatusToMessage = (status) => {\n  let msg = '';\n  switch(status) {\n    case 401:\n      msg = 'Acceso no autorizado';\n      break;\n    case 403:\n      msg = 'Acceso denegado';\n      break;\n    case 404:\n      msg = 'Recurso no encontrado';\n      break;\n    case 405:\n    case 406:\n    case 407:\n    case 408:\n    case 409:\n    case 410:\n    case 411:\n    case 412:\n    case 413:\n    case 414:\n    case 415:\n    case 416:\n    case 417:\n    case 418:\n      msg = 'Error desconocido, por favor, contacte con el administrador del sitio';\n      break;\n    case 500:\n    case 501:\n    case 502:\n    case 503:\n    case 505:\n    case 511:\n      msg = 'Error interno del servidor, por favor, contacte con el administrador del sitio';\n      break;\n    case 504:\n      msg = 'Se esperó demasiado tiempo la respuesta, por favor, intentelo más tarde';\n      break;\n    default:\n      msg = 'Problema de conexión';\n      break;\n  }\n\n  return msg;\n};\n\nexport default httpStatusToMessage;\n","import React from 'react';\nimport {\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport httpStatusToMessage from '../helpers/httpStatus';\n\nexport const ResourceAlerts = ({\n  residualLimit,\n  residualLimitList,\n  activeIngredient,\n  aptitude,\n  crop,\n}) => {\n  if (!residualLimitList.error &&\n      !residualLimit.error &&\n      !activeIngredient.error &&\n      !aptitude.error &&\n      !crop.error\n  ) {\n    return null;\n  }\n\n  return (\n    <Alert style={{ marginTop: \"1em\", marginBottom: \"1em\"}} severity=\"error\">\n      <AlertTitle>Algo salió mal</AlertTitle>\n      <ul>\n        {\n          residualLimit.error && (\n            <li>\n              <b>Operaciones con residuos límite:</b> { httpStatusToMessage(residualLimit.response.status) }\n            </li>\n          )\n        }\n        {\n          residualLimitList.error && (\n            <li>\n              <b>Residuos límite:</b> { httpStatusToMessage(residualLimitList.response.status) }\n            </li>\n          )\n        }\n        {\n          activeIngredient.error && (\n            <li>\n              <b>Ingredientes activos:</b> { httpStatusToMessage(activeIngredient.response.status) }\n            </li>\n          )\n        }\n        {\n          aptitude.error && (\n            <li>\n              <b>Aptitudes:</b> { httpStatusToMessage(aptitude.response.status) }\n            </li>\n          )\n        }\n        {\n          crop.error && (\n            <li>\n              <b>Cultivos:</b> { httpStatusToMessage(crop.response.status) }\n            </li>\n          )\n        }\n      </ul>\n    </Alert>\n  );\n}\n\nexport default ResourceAlerts\n","import React, { useState, useCallback } from 'react';\nimport {\n  Box,\n  Modal,\n  Container,\n  Button,\n} from '@mui/material';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  esES,\n} from '@mui/x-data-grid';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport useFetch from 'use-http';\n\nimport ResidualLimitFormComponent from '../components/ResidualLimitFormComponent';\nimport ResourceAlerts from '../components/ResourceAlerts';\n\nconst mapRows = (elem) => ({\n  id: elem.id,\n  activeIngredient: elem.active_ingredient.name,\n  aptitude: elem.aptitude.name,\n  crop: elem.crop.name,\n  residual: elem.residual,\n  harvest: elem.harvest,\n});\n\nexport const ListContainer = () => {\n  // State\n  const [ open, setOpen ] = useState(false);\n  const [ selected, setSelected ] = useState([]);\n\n  // Fetch options\n  const fetchOptions = {\n    data: [],\n    // Disable cache\n    cachePolicy: 'no-cache',\n  };\n\n  // Fetch objects\n  const {\n    error: residualLimitError,\n    response: residualLimitResponse,\n    post: residualLimitPost,\n    put: residualLimitPut,\n    del: residualLimitDelete,\n  } = useFetch('/residual-limits', { data: {}});\n  const {\n    error: residualLimitListError,\n    response: residualLimitListResponse,\n    data: residualLimitList,\n    loading: residualLimitLoading,\n  } = useFetch('/residual-limits', fetchOptions, [residualLimitResponse.data]);\n  const { error: activeIngredientError, response: activeIngredientResponse, data: activeIngredientList, loading: activeIngredientsLoading } = useFetch('/active-ingredients', fetchOptions, [open]);\n  const { error: aptitudeError, response: aptitudeResponse, data: aptitudeList, loading: aptitudesLoading } = useFetch('/aptitudes', fetchOptions, [open]);\n  const { error: cropError, response: cropResponse, data: cropList, loading: cropsLoading } = useFetch('/crops', fetchOptions, [open]);\n\n  // Visual\n  const CustomToolbar = () => {\n    return (\n      <GridToolbarContainer>\n        <Button color=\"primary\" startIcon={<AddIcon />} onClick={() => setOpen(true)}>\n          Agregar\n        </Button>\n        <Button color=\"primary\" startIcon={<DeleteIcon />} disabled={!selected.length} onClick={() => {\n          selected.forEach((e) => residualLimitDelete(`${e}`));\n        }}>\n          Eliminar\n        </Button>\n        <GridToolbarColumnsButton />\n        <GridToolbarFilterButton />\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      width: 75,\n      hide: true,\n      sortable: false,\n      disableExport: true,\n    },\n    {\n      field: 'activeIngredient',\n      headerName: 'Ingredientes activos',\n      flex: 3,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: activeIngredientResponse.ok ? activeIngredientList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'aptitude',\n      headerName: 'Aptiudes',\n      flex: 2,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: aptitudeResponse.ok ? aptitudeList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'crop',\n      headerName: 'Cultivos',\n      flex: 1,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: cropResponse.ok ? cropList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'residual',\n      headerName: 'Residuos',\n      flex: 1,\n      editable: true,\n      type: 'number',\n      sortable: false,\n    },\n    {\n      field: 'harvest',\n      headerName: 'Post-cosecha',\n      flex: 1,\n      editable: true,\n      type: 'boolean',\n      sortable: false,\n    },\n  ];\n\n  // Callbacks\n  const handleEdit = useCallback((params, event) => {\n    let activeIngredient = activeIngredientList.find((elem) => elem.name === params.getValue(params.id, 'activeIngredient'));\n    let aptitude = aptitudeList.find((elem) => elem.name === params.getValue(params.id, 'aptitude'));\n    let crop = cropList.find((elem) => elem.name === params.getValue(params.id, 'crop'));\n    let residualLimitBody = {\n      active_ingredient: `${activeIngredient.id}`,\n      aptitude: `${aptitude.id}`,\n      crop: `${crop.id}`,\n      residual: `${params.row.residual}`,\n      harvest: `${params.row.harvest}`,\n    };\n\n    residualLimitPut(`${params.row.id}`, residualLimitBody);\n  }, [residualLimitPut, activeIngredientList, aptitudeList, cropList]);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ height: 700, width: '100%' }}>\n        <ResourceAlerts\n          residualLimit={{\n            error: residualLimitError,\n            response: residualLimitResponse,\n          }}\n          residualLimitList={{\n            error: residualLimitListError,\n            response: residualLimitListResponse,\n          }}\n          activeIngredient={{\n            error: activeIngredientError,\n            response: activeIngredientResponse,\n          }}\n          aptitude={{\n            error: aptitudeError,\n            response: aptitudeResponse,\n          }}\n          crop={{\n            error: cropError,\n            response: cropResponse,\n          }}\n        />\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          aria-labelledby=\"add-residual-limit\"\n          aria-describedby=\"add-residual-limit-form\"\n        >\n          <>\n            <ResidualLimitFormComponent\n              closeModal={() => setOpen(false)}\n              activeIngredientList={activeIngredientList}\n              activeIngredientsLoading={activeIngredientsLoading}\n              aptitudeList={aptitudeList}\n              aptitudesLoading={aptitudesLoading}\n              cropList={cropList}\n              cropsLoading={cropsLoading}\n              residualLimitPost={residualLimitPost}\n            />\n          </>\n        </Modal>\n        <DataGrid\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n          rows={residualLimitListResponse.ok ? residualLimitList.map(mapRows) : []}\n          columns={columns}\n          checkboxSelection\n          editMode=\"row\"\n          loading={residualLimitLoading}\n          onRowEditStop={handleEdit}\n          onSelectionModelChange={(e) => setSelected(e)}\n          sortModel={[{\n            field: 'id',\n            sort: 'asc'\n          }]}\n          localeText={esES.components.MuiDataGrid.defaultProps.localeText}\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default ListContainer;\n","import ListContainer from './containers/ListContainer.jsx';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport { Provider } from 'use-http';\n\nconst theme = createTheme();\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider url={process.env.REACT_APP_BASE_URL}>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\">\n                Límites máximos de residuos (LMR)\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <ListContainer/>\n        </Box>\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}