{"version":3,"sources":["components/ResidualLimitFormComponent.jsx","components/DatasetComponent.jsx","helpers/httpStatus.js","components/ResourceAlerts.jsx","containers/ListContainer.jsx","App.js","index.js"],"names":["box","top","left","transform","width","height","xs","md","position","bgcolor","padding","ResidualLimitFormComponent","forwardRef","ref","closeModal","activeIngredientList","activeIngredientsLoading","aptitudeList","aptitudesLoading","cropList","cropsLoading","residualLimitPost","dataset","residualLimitGet","datasetPut","useState","activeIngredient","setActiveIngredient","aptitude","setAptitude","crop","setCrop","residual","setResidual","harvest","setHarvest","handleAdd","useCallback","params","event","residualLimit","active_ingredient","then","id","residualLimitIds","residual_limits","map","elem","Box","sx","Stack","direction","justifyContent","alignItems","spacing","Autocomplete","options","getOptionLabel","option","name","onChange","e","value","loading","isOptionEqualToValue","renderInput","TextField","label","variant","paddingTop","lg","type","inputProps","min","target","endadornment","InputAdornment","FormControlLabel","control","Checkbox","checked","Button","disabled","onClick","DatasetComponent","datasetPost","title","setTitle","description","setDescription","multiline","maxRows","httpStatusToMessage","status","msg","ResourceAlerts","data","reduce","acc","error","Alert","style","marginTop","marginBottom","severity","AlertTitle","response","mapRows","ListContainer","open","setOpen","selected","setSelected","fetchOptions","cachePolicy","useFetch","residualLimitError","residualLimitResponse","post","residualLimitPut","put","residualLimitDelete","del","datasetError","datasetResponse","datasetGet","get","datasetsError","datasetsResponse","datasetList","datasetsLoading","activeIngredientError","activeIngredientResponse","aptitudeError","aptitudeResponse","cropError","cropResponse","columns","field","headerName","hide","sortable","disableExport","flex","editable","valueOptions","ok","handleEdit","find","getValue","residualLimitBody","row","Container","maxWidth","InputLabel","Tooltip","placement","fontSize","Select","labelId","datasetID","MenuItem","color","startIcon","Modal","Boolean","onClose","components","Toolbar","Object","entries","length","requests","Promise","all","rows","checkboxSelection","editMode","onRowEditStop","onSelectionModelChange","sortModel","sort","localeText","esES","MuiDataGrid","defaultProps","theme","createTheme","App","ThemeProvider","url","process","flexGrow","AppBar","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uYAYMA,EAAM,CACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,OAAQ,CACNC,GAAI,MACJC,GAAI,OAENC,SAAU,WACVC,QAAS,OACTC,QAAS,OAkJIC,EA9I2BC,sBAAW,WAYlDC,GAAS,IAXVC,EAWS,EAXTA,WACAC,EAUS,EAVTA,qBACAC,EASS,EATTA,yBACAC,EAQS,EARTA,aACAC,EAOS,EAPTA,iBACAC,EAMS,EANTA,SACAC,EAKS,EALTA,aACAC,EAIS,EAJTA,kBAEAC,GAES,EAHTC,iBAGS,EAFTD,SACAE,EACS,EADTA,WAGA,EAAkDC,mBAAS,MAA3D,mBAAQC,EAAR,KAA0BC,EAA1B,KACA,EAAkCF,mBAAS,MAA3C,mBAAQG,EAAR,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAQK,EAAR,KAAcC,EAAd,KACA,EAAkCN,mBAAS,GAA3C,mBAAQO,EAAR,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAQS,EAAR,KAAiBC,EAAjB,KAmBMC,EAAYC,uBAAY,SAACC,EAAQC,GACrC,IAAIC,EAAgB,CAClBC,kBAAkB,GAAD,OAAKf,GACtBE,SAAS,GAAD,OAAKA,GACbE,KAAK,GAAD,OAAKA,GACTE,SAAS,GAAD,OAAKA,GACbE,QAAQ,GAAD,OAAKA,IAEdb,EAAkBmB,GAAeE,MAAK,YAAa,IAAVC,EAAS,EAATA,GACjCC,EAAmBtB,EAAQuB,gBAAgBC,KAAI,SAACC,GAAD,OAAUA,EAAKJ,MACpEnB,EAAW,GAAD,OAAIF,EAAQqB,IAAM,CAAEE,gBAAgB,GAAD,mBAAOD,GAAP,CAAyBD,SAExE7B,MACC,CAACQ,EAASE,EAAYH,EAAmBK,EAAkBE,EAAUE,EAAME,EAAUE,EAASpB,IAEjG,OACE,eAACkC,EAAA,EAAD,CACEC,GAAIjD,EACJa,IAAKA,EAFP,UAIE,yCACA,eAACqC,EAAA,EAAD,CACEC,UAAW,CAAE7C,GAAI,SAAUC,GAAI,OAC/B6C,eAAe,SACfC,WAAW,SACXC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GAJxB,UAME,cAACgD,EAAA,EAAD,CACEN,GAAI,CAAE7C,MAAO,QACbuC,GAAG,mBACHa,QAASzC,EACT0C,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCC,SAhDyB,SAACC,EAAGC,GACnCnC,EAAoBmC,EAAQA,EAAMnB,GAAK,OAgDjCoB,QAAS/C,EACTgD,qBAAsB,SAACN,EAAQI,GAAT,OAAmBJ,EAAOf,KAAOmB,EAAMnB,IAC7DsB,YAAa,SAAC3B,GAAD,OAAY,cAAC4B,EAAA,EAAD,2BAAe5B,GAAf,IAAuB6B,MAAM,qBAAqBC,QAAQ,iBAErF,cAACb,EAAA,EAAD,CACEN,GAAI,CAAE7C,MAAO,QACbuC,GAAG,YACHa,QAASvC,EACTwC,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCC,SAvDiB,SAACC,EAAGC,GAC3BjC,EAAYiC,EAAQA,EAAMnB,GAAK,OAuDzBoB,QAAS7C,EACT8C,qBAAsB,SAACN,EAAQI,GAAT,OAAmBJ,EAAOf,KAAOmB,EAAMnB,IAC7DsB,YAAa,SAAC3B,GAAD,OAAY,cAAC4B,EAAA,EAAD,2BAAe5B,GAAf,IAAuB6B,MAAM,UAAUC,QAAQ,iBAE1E,cAACb,EAAA,EAAD,CACEN,GAAI,CAAE7C,MAAO,QACbuC,GAAG,QACHa,QAASrC,EACTsC,eAAgB,SAACC,GAAD,OAAYA,EAAOC,MACnCC,SA9Da,SAACC,EAAGC,GACvB/B,EAAQ+B,EAAQA,EAAMnB,GAAK,OA8DrBoB,QAAS3C,EACT4C,qBAAsB,SAACN,EAAQI,GAAT,OAAmBJ,EAAOf,KAAOmB,EAAMnB,IAC7DsB,YAAa,SAAC3B,GAAD,OAAY,cAAC4B,EAAA,EAAD,2BAAe5B,GAAf,IAAuB6B,MAAM,WAAWC,QAAQ,oBAG7E,eAAClB,EAAA,EAAD,CACEC,UAAW,CAAE7C,GAAI,SAAUC,GAAI,OAC/B6C,eAAe,OACfC,WAAW,SACXC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GACtB0C,GAAI,CACFoB,WAAY,OANhB,UASA,cAACH,EAAA,EAAD,CACEjB,GAAI,CACF7C,MAAO,CACLE,GAAI,OACJC,GAAI,MACJ+D,GAAI,UAGR3B,GAAG,WACHwB,MAAM,WACNI,KAAK,SACLC,WAAY,CAAEC,IAAK,GACnBb,SAtFmB,SAACC,EAAGC,GAC3B7B,EAAY4B,EAAEa,OAAOZ,QAsFjBa,aAAc,cAACC,EAAA,EAAD,CAAgBpE,SAAS,MAAzB,iBAEd,cAACqE,EAAA,EAAD,CAAkBC,QAChB,cAACC,EAAA,EAAD,CAAUC,QAAS9C,EAAS0B,SAvFZ,SAACC,EAAGC,GAC1B3B,EAAW2B,MAuFLK,MAAM,oBAEV,cAACjB,EAAA,EAAD,CACEC,UAAW,CAAE7C,GAAI,SAAUC,GAAI,OAC/B6C,eAAe,WACfC,WAAW,WACXC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GACtB0C,GAAI,CACFoB,WAAY,OANhB,SASE,cAACY,EAAA,EAAD,CACEb,QAAQ,YACRc,WAAYxD,GAAoBE,GAAYE,GAAQE,GACpDmD,QAAS/C,EAHX,6BCvJFpC,EAAM,CACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,OAAQ,CACNC,GAAI,MACJC,GAAI,OAENC,SAAU,WACVC,QAAS,OACTC,QAAS,OA0FI0E,EAtFiBxE,sBAAW,WAGxCC,GAAS,IAFVC,EAES,EAFTA,WACAuE,EACS,EADTA,YAGA,EAA4B5D,mBAAS,IAArC,mBAAQ6D,EAAR,KAAeC,EAAf,KACA,EAAuC9D,mBAAS,IAAhD,mBAAQ+D,EAAR,KAAqBC,EAArB,KAUMrD,EAAYC,uBAAY,SAACC,EAAQC,GAKrC8C,EAJc,CACZC,MAAOA,EACPE,YAAaA,IAGf1E,MACC,CAACwE,EAAOE,EAAaH,EAAavE,IAErC,OACE,eAACkC,EAAA,EAAD,CACEC,GAAIjD,EACJa,IAAKA,EAFP,UAIE,yCACA,eAACqC,EAAA,EAAD,CACEC,UAAW,CAAE7C,GAAI,SAAUC,GAAI,OAC/B6C,eAAe,OACfC,WAAW,SACXC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GACtB0C,GAAI,CACFoB,WAAY,OANhB,UASE,cAACH,EAAA,EAAD,CACEjB,GAAI,CACF7C,MAAO,CACLE,GAAI,OACJC,GAAI,MACJ+D,GAAI,UAGR3B,GAAG,QACHwB,MAAM,YACNP,SAzCc,SAACC,EAAGC,GACxByB,EAAS1B,EAAEa,OAAOZ,UA0Cd,cAACI,EAAA,EAAD,CACEjB,GAAI,CACF7C,MAAO,CACLE,GAAI,OACJC,GAAI,MACJ+D,GAAI,UAGR3B,GAAG,cACHwB,MAAM,iBACNuB,WAAS,EACTC,QAAS,EACT/B,SApDoB,SAACC,EAAGC,GAC9B2B,EAAe5B,EAAEa,OAAOZ,aAsDtB,cAACZ,EAAA,EAAD,CACEC,UAAW,CAAE7C,GAAI,SAAUC,GAAI,OAC/B6C,eAAe,WACfC,WAAW,WACXC,QAAS,CAAEhD,GAAI,EAAGC,GAAI,GACtB0C,GAAI,CACFoB,WAAY,OANhB,SASE,cAACY,EAAA,EAAD,CACEb,QAAQ,YACRc,UAAWI,EACXH,QAAS/C,EAHX,6B,kBCpDOwD,EA/Ca,SAACC,GAC3B,IAAIC,EAAM,GACV,OAAOD,GACL,KAAK,IACHC,EAAM,uBACN,MACF,KAAK,IACHA,EAAM,kBACN,MACF,KAAK,IACHA,EAAM,wBACN,MACF,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACHA,EAAM,wEACN,MACF,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACHA,EAAM,iFACN,MACF,KAAK,IACHA,EAAM,gFACN,MACF,QACEA,EAAM,0BAIV,OAAOA,GCTMC,EA5Be,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAM/B,OAJiBA,EAAKC,QAAO,SAACC,EAAKnD,GAAN,OAC3BmD,GAAOnD,EAAKoD,SACX,GAOD,eAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,UAAW,MAAOC,aAAc,OAAQC,SAAS,QAAjE,UACE,cAACC,EAAA,EAAD,gCACA,6BAEIT,EAAKlD,KAAI,SAACC,GAAD,OACPA,EAAKoD,OACH,+BACE,4BAAIpD,EAAK+C,MADX,IACsBF,EAAoB7C,EAAK2D,SAASb,mBAX3D,MCcLc,EAAU,SAAC5D,GAAD,MAAW,CACzBJ,GAAII,EAAKJ,GACTjB,iBAAkBqB,EAAKN,kBAAkBkB,KACzC/B,SAAUmB,EAAKnB,SAAS+B,KACxB7B,KAAMiB,EAAKjB,KAAK6B,KAChB3B,SAAUe,EAAKf,SACfE,QAASa,EAAKb,UAmQD0E,EAhQc,WAE3B,MAA0BnF,mBAAS,IAAnC,mBAAQoF,EAAR,KAAcC,EAAd,KACA,EAAkCrF,mBAAS,IAA3C,mBAAQsF,EAAR,KAAkBC,EAAlB,KAGMC,EAAe,CACnBjB,KAAM,GAENkB,YAAa,YAIf,EAMIC,YAAS,mBAAoB,CAAEnB,KAAM,KALhCoB,EADT,EACEjB,MACUkB,EAFZ,EAEEX,SACMrF,EAHR,EAGEiG,KACKC,EAJP,EAIEC,IACKC,EALP,EAKEC,IAEF,EAMIP,YAAS,YAAa,CAAED,YAAa,WAAYlB,KAAM,KALlD2B,EADT,EACExB,MACUyB,EAFZ,EAEElB,SACMrB,EAHR,EAGEiC,KACKO,EAJP,EAIEC,IACKtG,EALP,EAKEgG,IAGF,EAA0GL,YAAS,YAAaF,EAAc,CAACW,EAAgB5B,OAAhJ+B,EAAf,EAAQ5B,MAAgC6B,EAAxC,EAA8BtB,SAAkCuB,EAAhE,EAA0DjC,KAA4BkC,EAAtF,EAA6EnE,QAC7E,EAA4IoD,YAAS,sBAAuBF,EAAc,CAACJ,IAA5KsB,EAAf,EAAQhC,MAAwCiC,EAAhD,EAAsC1B,SAA0C3F,EAAhF,EAA0EiF,KAAqChF,EAA/G,EAAsG+C,QACtG,EAA4GoD,YAAS,aAAcF,EAAc,CAACJ,IAAnIwB,EAAf,EAAQlC,MAAgCmC,EAAxC,EAA8B5B,SAAkCzF,GAAhE,EAA0D+E,KAA6B9E,GAAvF,EAA8E6C,QAC9E,GAA4FoD,YAAS,SAAUF,EAAc,CAACJ,IAA/G0B,GAAf,GAAQpC,MAA4BqC,GAApC,GAA0B9B,SAA8BvF,GAAxD,GAAkD6E,KAAyB5E,GAA3E,GAAkE2C,QAuB5D0E,GAAU,CACd,CACEC,MAAO,KACPC,WAAY,KACZvI,MAAO,GACPwI,MAAM,EACNC,UAAU,EACVC,eAAe,GAEjB,CACEJ,MAAO,mBACPC,WAAY,uBACZI,KAAM,EACNC,UAAU,EACVzE,KAAM,eACN0E,aAAcb,EAAyBc,GAAKnI,EAAqB+B,KAAI,SAACC,GAAD,OAAUA,EAAKY,QAAQ,GAC5FkF,UAAU,GAEZ,CACEH,MAAO,WACPC,WAAY,WACZI,KAAM,EACNC,UAAU,EACVzE,KAAM,eACN0E,aAAcX,EAAiBY,GAAKjI,GAAa6B,KAAI,SAACC,GAAD,OAAUA,EAAKY,QAAQ,GAC5EkF,UAAU,GAEZ,CACEH,MAAO,OACPC,WAAY,WACZI,KAAM,EACNC,UAAU,EACVzE,KAAM,eACN0E,aAAcT,GAAaU,GAAK/H,GAAS2B,KAAI,SAACC,GAAD,OAAUA,EAAKY,QAAQ,GACpEkF,UAAU,GAEZ,CACEH,MAAO,WACPC,WAAY,WACZI,KAAM,EACNC,UAAU,EACVzE,KAAM,SACNsE,UAAU,GAEZ,CACEH,MAAO,UACPC,WAAY,eACZI,KAAM,EACNC,UAAU,EACVzE,KAAM,UACNsE,UAAU,IAKRM,GAAa9G,uBAAY,SAACC,EAAQC,GACtC,IAAIb,EAAmBX,EAAqBqI,MAAK,SAACrG,GAAD,OAAUA,EAAKY,OAASrB,EAAO+G,SAAS/G,EAAOK,GAAI,uBAChGf,EAAWX,GAAamI,MAAK,SAACrG,GAAD,OAAUA,EAAKY,OAASrB,EAAO+G,SAAS/G,EAAOK,GAAI,eAChFb,EAAOX,GAASiI,MAAK,SAACrG,GAAD,OAAUA,EAAKY,OAASrB,EAAO+G,SAAS/G,EAAOK,GAAI,WACxE2G,EAAoB,CACtB7G,kBAAkB,GAAD,OAAKf,EAAiBiB,IACvCf,SAAS,GAAD,OAAKA,EAASe,IACtBb,KAAK,GAAD,OAAKA,EAAKa,IACdX,SAAS,GAAD,OAAKM,EAAOiH,IAAIvH,UACxBE,QAAQ,GAAD,OAAKI,EAAOiH,IAAIrH,UAGzBqF,EAAiB,GAAD,OAAIjF,EAAOiH,IAAI5G,IAAM2G,GAAmB5G,MAAK,WAC3DmF,EAAW,GAAD,OAAID,EAAgB5B,KAAKrD,UAEpC,CAACkF,EAAYD,EAAgB5B,KAAMuB,EAAkBxG,EAAsBE,GAAcE,KAO5F,OACE,cAACqI,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACzG,EAAA,EAAD,CAAKC,GAAI,CAAE5C,OAAQ,IAAKD,MAAO,QAA/B,UACE,cAAC,EAAD,CACE4F,KAAM,CACJ,CACEF,IAAK,6BACLK,MAAOwB,EACPjB,SAAUkB,GAEZ,CACE9B,IAAK,uCACLK,MAAOiB,EACPV,SAAUW,GAEZ,CACEvB,IAAK,aACLK,MAAO4B,EACPrB,SAAUsB,GAEZ,CACElC,IAAK,yBACLK,MAAOgC,EACPzB,SAAU0B,GAEZ,CACEtC,IAAK,aACLK,MAAOkC,EACP3B,SAAU4B,GAEZ,CACExC,IAAK,aACLK,MAAOoC,GACP7B,SAAU8B,OAIhB,eAACxF,EAAA,EAAD,CACEqD,MAAO,CAAEC,UAAW,MAAOC,aAAc,OAD3C,UAGE,eAACmD,EAAA,EAAD,CAAY/G,GAAG,gBAAf,oBAGIiF,EAAgBsB,IAAMtB,EAAgB5B,KAAKR,aACzC,cAACmE,EAAA,EAAD,CAASrE,MAAOsC,EAAgB5B,KAAKR,YAAaoE,UAAU,QAA5D,SACE,8BACE,cAAC,IAAD,CAAU3G,GAAI,CAAE4G,SAAU,aAMpC,cAACC,EAAA,EAAD,CACEzD,MAAO,CAAEjG,MAAO,QAChB2J,QAAQ,gBACRpH,GAAG,iBACHmB,MAAO8D,EAAgBsB,GAAKtB,EAAgB5B,KAAKrD,GAAK,GACtDwB,MAAM,UACNP,SA/DW,SAACrB,GACpB,IAAMyH,EAAYzH,EAAMmC,OAAOZ,MAC/B+D,EAAW,GAAD,OAAImC,KAuDR,SASIhC,EAAiBkB,IAAMjB,EAAYnF,KAAI,SAACxB,GAAD,OACrC,cAAC2I,EAAA,EAAD,CAAUnG,MAAOxC,EAAQqB,GAAzB,SAA+CrB,EAAQgE,OAArBhE,EAAQqB,SAIhD,cAACsC,EAAA,EAAD,CAAQiF,MAAM,UAAUC,UAAW,cAAC,IAAD,IAAahF,QAAS,kBAAM2B,EAAQ,YAAvE,gCAIF,cAACsD,EAAA,EAAD,CACEvD,KAAMwD,QAAQxD,GACdyD,QAAS,kBAAMxD,EAAQ,KACvB,kBAAgB,qBAChB,mBAAiB,0BAJnB,SAME,qCAEa,kBAATD,GACE,cAAC,EAAD,CACE/F,WAAY,kBAAMgG,EAAQ,KAC1B/F,qBAAsBA,EACtBC,yBAA0BA,EAC1BC,aAAcA,GACdC,iBAAkBA,GAClBC,SAAUA,GACVC,aAAcA,GACdC,kBAAmBA,EACnBC,QAASsG,EAAgB5B,KACzBxE,WAAYA,IAKP,YAATqF,GACE,cAAC,EAAD,CACE/F,WAAY,kBAAMgG,EAAQ,KAC1BzB,YAAaA,SAMvB,cAAC,IAAD,CACEkF,WAAY,CACVC,QA1MY,WACpB,OACE,eAAC,IAAD,WACE,cAACvF,EAAA,EAAD,CAAQiF,MAAM,UAAUC,UAAW,cAAC,IAAD,IAAajF,UAAWuF,OAAOC,QAAQ9C,EAAgB5B,MAAM2E,OAAQxF,QAAS,kBAAM2B,EAAQ,kBAA/H,qBAGA,cAAC7B,EAAA,EAAD,CAAQiF,MAAM,UAAUC,UAAW,cAAC,IAAD,IAAgBjF,UAAW6B,EAAS4D,OAAQxF,QAAS,WACtF,IAAMyF,EAAW7D,EAASjE,KAAI,SAACe,GAAD,OAAO4D,EAAoB,GAAD,OAAI5D,OAC5DgH,QAAQC,IAAIF,GAAUlI,MAAK,WACzBmF,EAAW,GAAD,OAAID,EAAgB5B,KAAKrD,SAHvC,sBAQA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,SA4LEoI,KAAMnD,EAAgBsB,GAAKtB,EAAgB5B,KAAKnD,gBAAgBC,IAAI6D,GAAW,GAC/E8B,QAASA,GACTuC,mBAAiB,EACjBC,SAAS,MACTlH,QAASmE,EACTgD,cAAe/B,GACfgC,uBAAwB,SAACtH,GAAD,OAAOmD,EAAYnD,IAC3CuH,UAAW,CAAC,CACV1C,MAAO,KACP2C,KAAM,QAERC,WAAYC,IAAKhB,WAAWiB,YAAYC,aAAaH,mB,4CCpRzDI,EAAQC,cAuBCC,MApBf,WAEE,OACE,cAACC,EAAA,EAAD,CAAeH,MAAOA,EAAtB,SACE,cAAC,IAAD,CAAUI,IAAKC,qCAAf,SACE,eAAC/I,EAAA,EAAD,CAAKC,GAAI,CAAE+I,SAAU,GAArB,UACE,cAACC,EAAA,EAAD,CAAQzL,SAAS,SAAjB,SACE,cAACgK,EAAA,EAAD,UACE,cAAC0B,EAAA,EAAD,CAAY9H,QAAQ,KAApB,yDAKJ,cAAC,EAAD,YCtBV+H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7885333.chunk.js","sourcesContent":["import React, { useState, forwardRef, useCallback } from 'react';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  InputAdornment,\n  TextField,\n  Stack,\n} from '@mui/material';\n\nconst box = {\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '70%',\n  height: {\n    xs: '65%',\n    md: '30%',\n  },\n  position: 'absolute',\n  bgcolor: '#FFF',\n  padding: '2em',\n};\n\n\nexport const ResidualLimitFormComponent = forwardRef(({\n  closeModal,\n  activeIngredientList,\n  activeIngredientsLoading,\n  aptitudeList,\n  aptitudesLoading,\n  cropList,\n  cropsLoading,\n  residualLimitPost,\n  residualLimitGet,\n  dataset,\n  datasetPut,\n}, ref) => {\n  // State\n  const [ activeIngredient, setActiveIngredient ] = useState(null);\n  const [ aptitude, setAptitude ] = useState(null);\n  const [ crop, setCrop ] = useState(null);\n  const [ residual, setResidual ] = useState(0);\n  const [ harvest, setHarvest ] = useState(false);\n\n  // Callbacks\n  const onActiveIngredientChange = (e, value) => {\n    setActiveIngredient(value ? value.id : null);\n  };\n  const onAptitudeChange = (e, value) => {\n    setAptitude(value ? value.id : null);\n  };\n  const onCropChange = (e, value) => {\n    setCrop(value ? value.id : null);\n  };\n  const onResidualChange = (e, value) => {\n    setResidual(e.target.value);\n  };\n  const onHarvestChange = (e, value) => {\n    setHarvest(value);\n  };\n\n  const handleAdd = useCallback((params, event) => {\n    let residualLimit = {\n      active_ingredient: `${activeIngredient}`,\n      aptitude: `${aptitude}`,\n      crop: `${crop}`,\n      residual: `${residual}`,\n      harvest: `${harvest}`,\n    };\n    residualLimitPost(residualLimit).then(({ id }) => {\n      const residualLimitIds = dataset.residual_limits.map((elem) => elem.id);\n      datasetPut(`${dataset.id}`, { residual_limits: [ ...residualLimitIds, id] });\n    });\n    closeModal();\n  }, [dataset, datasetPut, residualLimitPost, activeIngredient, aptitude, crop, residual, harvest, closeModal]);\n\n  return (\n    <Box\n      sx={box}\n      ref={ref}\n    >\n      <h2>Agregar</h2>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={{ xs: 1, md: 2 }}\n      >\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"activeIngredient\"\n          options={activeIngredientList}\n          getOptionLabel={(option) => option.name}\n          onChange={onActiveIngredientChange}\n          loading={activeIngredientsLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Ingrediente activo\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"aptitudes\"\n          options={aptitudeList}\n          getOptionLabel={(option) => option.name}\n          onChange={onAptitudeChange}\n          loading={aptitudesLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Aptitud\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          sx={{ width: \"100%\"}}\n          id=\"crops\"\n          options={cropList}\n          getOptionLabel={(option) => option.name}\n          onChange={onCropChange}\n          loading={cropsLoading}\n          isOptionEqualToValue={(option, value) => option.id === value.id}\n          renderInput={(params) => <TextField {...params} label=\"Cultivos\" variant=\"outlined\" />}\n        />\n      </Stack>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"left\"\n        alignItems=\"center\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n      <TextField\n        sx={{\n          width: {\n            xs: \"100%\",\n            md: \"32%\",\n            lg: \"32.5%\",\n          }\n        }}\n        id=\"residual\"\n        label=\"Residuos\"\n        type=\"number\"\n        inputProps={{ min: 0 }}\n        onChange={onResidualChange}\n        endadornment={<InputAdornment position=\"end\">g</InputAdornment>}\n      />\n        <FormControlLabel control={\n          <Checkbox checked={harvest} onChange={onHarvestChange} />\n        } label=\"Post Cosecha\" />\n      </Stack>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          disabled={!(activeIngredient && aptitude && crop && residual)}\n          onClick={handleAdd}\n        >Guardar</Button>\n      </Stack>\n    </Box>\n  );\n});\n\nexport default ResidualLimitFormComponent;\n","import React, { useState, forwardRef, useCallback } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Stack,\n} from '@mui/material';\n\nconst box = {\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '70%',\n  height: {\n    xs: '65%',\n    md: '30%',\n  },\n  position: 'absolute',\n  bgcolor: '#FFF',\n  padding: '2em',\n};\n\n\nexport const DatasetComponent = forwardRef(({\n  closeModal,\n  datasetPost,\n}, ref) => {\n  // State\n  const [ title, setTitle ] = useState('');\n  const [ description, setDescription] = useState('');\n\n  // Callbacks\n  const onTitleChange = (e, value) => {\n    setTitle(e.target.value);\n  };\n  const onDescriptionChange = (e, value) => {\n    setDescription(e.target.value);\n  };\n\n  const handleAdd = useCallback((params, event) => {\n    let dataset = {\n      title: title,\n      description: description,\n    };\n    datasetPost(dataset);\n    closeModal();\n  }, [title, description, datasetPost, closeModal]);\n\n  return (\n    <Box\n      sx={box}\n      ref={ref}\n    >\n      <h2>Agregar</h2>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"left\"\n        alignItems=\"center\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n        <TextField\n          sx={{\n            width: {\n              xs: \"100%\",\n              md: \"32%\",\n              lg: \"32.5%\",\n            }\n          }}\n          id=\"title\"\n          label=\"Título\"\n          onChange={onTitleChange}\n        />\n        <TextField\n          sx={{\n            width: {\n              xs: \"100%\",\n              md: \"32%\",\n              lg: \"32.5%\",\n            }\n          }}\n          id=\"description\"\n          label=\"Descripción\"\n          multiline\n          maxRows={4}\n          onChange={onDescriptionChange}\n        />\n      </Stack>\n      <Stack\n        direction={{ xs: 'column', md: 'row' }}\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n        spacing={{ xs: 1, md: 2 }}\n        sx={{\n          paddingTop: \"1em\"\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          disabled={!title}\n          onClick={handleAdd}\n        >Guardar</Button>\n      </Stack>\n    </Box>\n  );\n});\n\nexport default DatasetComponent;\n","const httpStatusToMessage = (status) => {\n  let msg = '';\n  switch(status) {\n    case 401:\n      msg = 'Acceso no autorizado';\n      break;\n    case 403:\n      msg = 'Acceso denegado';\n      break;\n    case 404:\n      msg = 'Recurso no encontrado';\n      break;\n    case 405:\n    case 406:\n    case 407:\n    case 408:\n    case 409:\n    case 410:\n    case 411:\n    case 412:\n    case 413:\n    case 414:\n    case 415:\n    case 416:\n    case 417:\n    case 418:\n      msg = 'Error desconocido, por favor, contacte con el administrador del sitio';\n      break;\n    case 500:\n    case 501:\n    case 502:\n    case 503:\n    case 505:\n    case 511:\n      msg = 'Error interno del servidor, por favor, contacte con el administrador del sitio';\n      break;\n    case 504:\n      msg = 'Se esperó demasiado tiempo la respuesta, por favor, intentelo más tarde';\n      break;\n    default:\n      msg = 'Problema de conexión';\n      break;\n  }\n\n  return msg;\n};\n\nexport default httpStatusToMessage;\n","import React from 'react';\nimport {\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport httpStatusToMessage from '../helpers/httpStatus';\n\nexport const ResourceAlerts = ({ data }) => {\n  // Check for errors\n  const hasError = data.reduce((acc, elem) => (\n    acc || elem.error\n  ), false);\n\n  if (!hasError) {\n    return null;\n  }\n\n  return (\n    <Alert style={{ marginTop: \"1em\", marginBottom: \"1em\"}} severity=\"error\">\n      <AlertTitle>Algo salió mal</AlertTitle>\n      <ul>\n        {\n          data.map((elem) => (\n            elem.error && (\n              <li>\n                <b>{elem.msg}</b> { httpStatusToMessage(elem.response.status) }\n              </li>\n            )\n          ))\n        }\n      </ul>\n    </Alert>\n  );\n}\n\nexport default ResourceAlerts\n","import React, { useState, useCallback } from 'react';\nimport {\n  Box,\n  Modal,\n  Container,\n  Button,\n  MenuItem,\n  Select,\n  InputLabel,\n  Tooltip,\n} from '@mui/material';\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  esES,\n} from '@mui/x-data-grid';\nimport AddIcon from '@mui/icons-material/Add';\nimport InfoIcon from '@mui/icons-material/Info';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport useFetch from 'use-http';\n\nimport ResidualLimitFormComponent from '../components/ResidualLimitFormComponent';\nimport DatasetComponent from '../components/DatasetComponent';\nimport ResourceAlerts from '../components/ResourceAlerts';\n\nconst mapRows = (elem) => ({\n  id: elem.id,\n  activeIngredient: elem.active_ingredient.name,\n  aptitude: elem.aptitude.name,\n  crop: elem.crop.name,\n  residual: elem.residual,\n  harvest: elem.harvest,\n});\n\nexport const ListContainer = () => {\n  // State\n  const [ open, setOpen ] = useState('');\n  const [ selected, setSelected ] = useState([]);\n\n  // Fetch options\n  const fetchOptions = {\n    data: [],\n    // Disable cache\n    cachePolicy: 'no-cache',\n  };\n\n  // Fetch objects\n  const {\n    error: residualLimitError,\n    response: residualLimitResponse,\n    post: residualLimitPost,\n    put: residualLimitPut,\n    del: residualLimitDelete,\n  } = useFetch('/residual-limits', { data: {}});\n  const {\n    error: datasetError,\n    response: datasetResponse,\n    post: datasetPost,\n    get: datasetGet,\n    put: datasetPut,\n  } = useFetch('/datasets', { cachePolicy: 'no-cache', data: {}});\n\n  const { error: datasetsError, response: datasetsResponse, data: datasetList, loading: datasetsLoading } = useFetch('/datasets', fetchOptions, [datasetResponse.data]);\n  const { error: activeIngredientError, response: activeIngredientResponse, data: activeIngredientList, loading: activeIngredientsLoading } = useFetch('/active-ingredients', fetchOptions, [open]);\n  const { error: aptitudeError, response: aptitudeResponse, data: aptitudeList, loading: aptitudesLoading } = useFetch('/aptitudes', fetchOptions, [open]);\n  const { error: cropError, response: cropResponse, data: cropList, loading: cropsLoading } = useFetch('/crops', fetchOptions, [open]);\n\n  // Visual\n  const CustomToolbar = () => {\n    return (\n      <GridToolbarContainer>\n        <Button color=\"primary\" startIcon={<AddIcon />} disabled={!Object.entries(datasetResponse.data).length} onClick={() => setOpen('residualLimit')}>\n          Agregar\n        </Button>\n        <Button color=\"primary\" startIcon={<DeleteIcon />} disabled={!selected.length} onClick={() => {\n          const requests = selected.map((e) => residualLimitDelete(`${e}`));\n          Promise.all(requests).then(() => {\n            datasetGet(`${datasetResponse.data.id}`);\n          });\n        }}>\n          Eliminar\n        </Button>\n        <GridToolbarColumnsButton />\n        <GridToolbarFilterButton />\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  };\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      width: 75,\n      hide: true,\n      sortable: false,\n      disableExport: true,\n    },\n    {\n      field: 'activeIngredient',\n      headerName: 'Ingredientes activos',\n      flex: 3,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: activeIngredientResponse.ok ? activeIngredientList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'aptitude',\n      headerName: 'Aptiudes',\n      flex: 2,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: aptitudeResponse.ok ? aptitudeList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'crop',\n      headerName: 'Cultivos',\n      flex: 1,\n      editable: true,\n      type: 'singleSelect',\n      valueOptions: cropResponse.ok ? cropList.map((elem) => elem.name) : [],\n      sortable: false,\n    },\n    {\n      field: 'residual',\n      headerName: 'Residuos',\n      flex: 1,\n      editable: true,\n      type: 'number',\n      sortable: false,\n    },\n    {\n      field: 'harvest',\n      headerName: 'Post-cosecha',\n      flex: 1,\n      editable: true,\n      type: 'boolean',\n      sortable: false,\n    },\n  ];\n\n  // Callbacks\n  const handleEdit = useCallback((params, event) => {\n    let activeIngredient = activeIngredientList.find((elem) => elem.name === params.getValue(params.id, 'activeIngredient'));\n    let aptitude = aptitudeList.find((elem) => elem.name === params.getValue(params.id, 'aptitude'));\n    let crop = cropList.find((elem) => elem.name === params.getValue(params.id, 'crop'));\n    let residualLimitBody = {\n      active_ingredient: `${activeIngredient.id}`,\n      aptitude: `${aptitude.id}`,\n      crop: `${crop.id}`,\n      residual: `${params.row.residual}`,\n      harvest: `${params.row.harvest}`,\n    };\n\n    residualLimitPut(`${params.row.id}`, residualLimitBody).then(() => {\n      datasetGet(`${datasetResponse.data.id}`);\n    });\n  }, [datasetGet, datasetResponse.data, residualLimitPut, activeIngredientList, aptitudeList, cropList]);\n\n  const handleChange = (event) => {\n    const datasetID = event.target.value;\n    datasetGet(`${datasetID}`);\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ height: 600, width: '100%' }}>\n        <ResourceAlerts\n          data={[\n            {\n              msg: \"Operaciones con datasets: \",\n              error: datasetError,\n              response: datasetResponse,\n            },\n            {\n              msg: \"Operaciones con residuos límite: \",\n              error: residualLimitError,\n              response: residualLimitResponse,\n            },\n            {\n              msg: \"Datasets: \",\n              error: datasetsError,\n              response: datasetsResponse,\n            },\n            {\n              msg: \"Ingredientes activos: \",\n              error: activeIngredientError,\n              response: activeIngredientResponse,\n            },\n            {\n              msg: \"Aptiudes: \",\n              error: aptitudeError,\n              response: aptitudeResponse,\n            },\n            {\n              msg: \"Cultivos: \",\n              error: cropError,\n              response: cropResponse,\n            },\n          ]}\n        />\n        <Box\n          style={{ marginTop: \"1em\", marginBottom: \"1em\"}}\n        >\n          <InputLabel id=\"dataset-label\">\n            Dataset\n            {\n              datasetResponse.ok && datasetResponse.data.description && (\n                <Tooltip title={datasetResponse.data.description} placement=\"right\">\n                  <sup>\n                    <InfoIcon sx={{ fontSize: 15 }}/>\n                  </sup>\n                </Tooltip>\n              )\n            }\n          </InputLabel>\n          <Select\n            style={{ width: '20em' }}\n            labelId=\"dataset-label\"\n            id=\"dataset-select\"\n            value={datasetResponse.ok ? datasetResponse.data.id : ''}\n            label=\"Dataset\"\n            onChange={handleChange}\n          >\n            {\n              datasetsResponse.ok && datasetList.map((dataset) => (\n                <MenuItem value={dataset.id} key={dataset.id}>{dataset.title}</MenuItem>\n              ))\n            }\n          </Select>\n          <Button color=\"primary\" startIcon={<AddIcon />} onClick={() => setOpen('dataset')}>\n            Agregar dataset\n          </Button>\n        </Box>\n        <Modal\n          open={Boolean(open)}\n          onClose={() => setOpen('')}\n          aria-labelledby=\"add-residual-limit\"\n          aria-describedby=\"add-residual-limit-form\"\n        >\n          <>\n            {\n              open === 'residualLimit' && (\n                <ResidualLimitFormComponent\n                  closeModal={() => setOpen('')}\n                  activeIngredientList={activeIngredientList}\n                  activeIngredientsLoading={activeIngredientsLoading}\n                  aptitudeList={aptitudeList}\n                  aptitudesLoading={aptitudesLoading}\n                  cropList={cropList}\n                  cropsLoading={cropsLoading}\n                  residualLimitPost={residualLimitPost}\n                  dataset={datasetResponse.data}\n                  datasetPut={datasetPut}\n                />\n              )\n            }\n            {\n              open === 'dataset' && (\n                <DatasetComponent\n                  closeModal={() => setOpen('')}\n                  datasetPost={datasetPost}\n                />\n              )\n            }\n          </>\n        </Modal>\n        <DataGrid\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n          rows={datasetResponse.ok ? datasetResponse.data.residual_limits.map(mapRows) : []}\n          columns={columns}\n          checkboxSelection\n          editMode=\"row\"\n          loading={datasetsLoading}\n          onRowEditStop={handleEdit}\n          onSelectionModelChange={(e) => setSelected(e)}\n          sortModel={[{\n            field: 'id',\n            sort: 'asc'\n          }]}\n          localeText={esES.components.MuiDataGrid.defaultProps.localeText}\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default ListContainer;\n","import ListContainer from './containers/ListContainer.jsx';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport { Provider } from 'use-http';\n\nconst theme = createTheme();\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider url={process.env.REACT_APP_API_URL}>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\">\n                Límites máximos de residuos (LMR)\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <ListContainer/>\n        </Box>\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}